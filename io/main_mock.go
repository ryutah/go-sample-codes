// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMyReader is a mock of MyReader interface
type MockMyReader struct {
	ctrl     *gomock.Controller
	recorder *MockMyReaderMockRecorder
}

// MockMyReaderMockRecorder is the mock recorder for MockMyReader
type MockMyReaderMockRecorder struct {
	mock *MockMyReader
}

// NewMockMyReader creates a new mock instance
func NewMockMyReader(ctrl *gomock.Controller) *MockMyReader {
	mock := &MockMyReader{ctrl: ctrl}
	mock.recorder = &MockMyReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMyReader) EXPECT() *MockMyReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockMyReader) Read(p []byte) (int, error) {
	ret := m.ctrl.Call(m, "Read", p)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockMyReaderMockRecorder) Read(p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockMyReader)(nil).Read), p)
}

// MockMyWriter is a mock of MyWriter interface
type MockMyWriter struct {
	ctrl     *gomock.Controller
	recorder *MockMyWriterMockRecorder
}

// MockMyWriterMockRecorder is the mock recorder for MockMyWriter
type MockMyWriterMockRecorder struct {
	mock *MockMyWriter
}

// NewMockMyWriter creates a new mock instance
func NewMockMyWriter(ctrl *gomock.Controller) *MockMyWriter {
	mock := &MockMyWriter{ctrl: ctrl}
	mock.recorder = &MockMyWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMyWriter) EXPECT() *MockMyWriterMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *MockMyWriter) Write(p []byte) (int, error) {
	ret := m.ctrl.Call(m, "Write", p)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write
func (mr *MockMyWriterMockRecorder) Write(p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockMyWriter)(nil).Write), p)
}
